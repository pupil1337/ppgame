{
	"version": "2.0.0",
	"tasks": [
		// editor & game
		{
			"label": "editor&game [debug]",
			"dependsOrder": "sequence",
			"dependsOn": [
				"editor [debug]",
				"update gdextension api",
				"game [debug]"
			],
			"problemMatcher": []
		},

		// -----------------------------------------------------------------
		// Editor
		// -----------------------------------------------------------------

		// editor
		{
			"label": "editor [debug]",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/godot"
			},

			"windows": {
				"command": "scons",
				"args": [
					"platform=windows",
					"bits=64",
					"target=editor",
					"custom_modules=../ppgame/game_module",
					"dev_build=yes",
					"dev_mode=yes",
					"verbose=no",
					"debug_symbols=yes",
					"compiledb=yes",
					"deprecated=no"
				],
				"problemMatcher": []
			},

			"linux": {
				"command": "scons",
				"args": [
					"platform=linuxbsd",
					"bits=64",
					"target=editor",
					"custom_modules=../ppgame/game_module",
					"use_llvm=yes",
					"linker=lld", // in ArchLinxu: Fix `libatomic` https://github.com/godotengine/godot/issues/46375#issuecomment-1373075734
					"dev_build=yes",
					"dev_mode=yes",
					"verbose=no",
					"debug_symbols=yes",
					"compiledb=yes",
					"deprecated=no"
				],
				"problemMatcher": []
			}
		},

		// -----------------------------------------------------------------
		// GDExtension API
		// -----------------------------------------------------------------

		// generate gdextension api
		{
			"label": "generate gdextension api",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/godot/bin"
			},
			
			"windows": {
				"command": "./godot.windows.editor.dev.x86_64.console.exe"
			},

			"linux": {
				"command": "./godot.linuxbsd.editor.dev.x86_64.llvm"
			},

			"args": [
				"--dump-extension-api",
				"--dump-gdextension-interface",
				"--headless",
				"--script"
			],
			"hide": true,
			"problemMatcher": []
		},
		// copy extension header and API
		{
			"label": "copy extension_api.json and gdextension_interface.h",
			"type": "shell",

			"windows": {
				"command": "copy",
				"args": [
					"${workspaceFolder}/godot/bin/extension_api.json",
					",",
					"${workspaceFolder}/godot/bin/gdextension_interface.h",
					"${workspaceFolder}/godot-cpp/gdextension"
				]
			},

			"linux": {
				"command": "cp",
				"args": [
					"${workspaceFolder}/godot/bin/extension_api.json",
					"${workspaceFolder}/godot/bin/gdextension_interface.h",
					"${workspaceFolder}/godot-cpp/gdextension"
				]
			},

			"hide": true,
			"problemMatcher": []
		},
		// update extension api
		{
			"label": "update gdextension api",
			"dependsOrder": "sequence",
			"dependsOn": [
				"generate gdextension api",
				"copy extension_api.json and gdextension_interface.h"
			],
			"problemMatcher": []
		},

		// -----------------------------------------------------------------
		// Game
		// -----------------------------------------------------------------

		// game-1: gdextension
		{
			"label": "game-1 game [debug]",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/ppgame/game_gdextension"
			},

			"windows": {
				"command": "scons",
				"args": [
					"platform=windows",
					"target=editor",
					"dev_build=yes",
					"debug_symbols=yes",
					"compiledb=yes",
					"warnings=extra",
					"werror=yes"
				],
				"problemMatcher": []
			},

			"linux": {
				"command": "scons",
				"args": [
					"platform=linux",
					"target=editor",
					"use_llvm=yes",
					"dev_build=yes",
					"debug_symbols=yes",
					"compiledb=yes",
					"warnings=extra",
					"werror=yes"
				],
				"problemMatcher": []
			},

			"hide": true
		},
		// game-2: merge compile_commands.json
		{
			"label": "game-2 merge compile_commands.json",
			"type": "shell",
			"command": "python",
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"args": [
				"merge_compile_commands.py"
			],
			
			"hide": true,
			"problemMatcher": []
		},
		// game-3: command clangd.restart
		{
			"label": "game-3 @command:clangd.restart",
			"command": "${command:clangd.restart}",
			"hide": true,
			"problemMatcher": []
		},
		// game
		{
			"label": "game [debug]",
			"dependsOrder": "sequence",
			"dependsOn": [
				"game-1 game [debug]",
				"game-2 merge compile_commands.json",
				"game-3 @command:clangd.restart"
			],
			"group": {
				"kind": "build",
				"isDefault": true
			},
			"problemMatcher": []
		},

		// -----------------------------------------------------------------
		// Doxygen
		// -----------------------------------------------------------------

		// doxygen
		{
			"label": "doxygen",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/doc/doxygen"
			},
			"command": "doxygen",
			"problemMatcher": []
		}
	]
}
